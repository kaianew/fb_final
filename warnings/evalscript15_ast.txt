Module(
    body=[
        Import(
            names=[
                alias(name='scipy.stats', asname='stats')]),
        Import(
            names=[
                alias(name='numpy', asname='np')]),
        Import(
            names=[
                alias(name='pandas', asname='pd')]),
        ImportFrom(
            module='functools',
            names=[
                alias(name='wraps')],
            level=0),
        FunctionDef(
            name='check_normality',
            args=arguments(
                args=[
                    arg(arg='func')]),
            body=[
                FunctionDef(
                    name='wrapper',
                    args=arguments(
                        vararg=arg(arg='args'),
                        kwarg=arg(arg='kwargs')),
                    body=[
                        Assign(
                            targets=[
                                Name(id='data', ctx=Store())],
                            value=Subscript(
                                value=Name(id='args', ctx=Load()),
                                slice=Constant(value=0),
                                ctx=Load())),
                        Assign(
                            targets=[
                                Tuple(
                                    elts=[
                                        Name(id='_', ctx=Store()),
                                        Name(id='p', ctx=Store())],
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='stats', ctx=Load()),
                                    attr='shapiro',
                                    ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load())])),
                        If(
                            test=Compare(
                                left=Name(id='p', ctx=Load()),
                                ops=[
                                    Gt()],
                                comparators=[
                                    Constant(value=0.05)]),
                            body=[
                                Return(
                                    value=Call(
                                        func=Name(id='func', ctx=Load()),
                                        args=[
                                            Starred(
                                                value=Name(id='args', ctx=Load()),
                                                ctx=Load())],
                                        keywords=[
                                            keyword(
                                                value=Name(id='kwargs', ctx=Load()))]))],
                            orelse=[
                                Assign(
                                    targets=[
                                        Name(id='transformed', ctx=Store())],
                                    value=Subscript(
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='stats', ctx=Load()),
                                                attr='boxcox',
                                                ctx=Load()),
                                            args=[
                                                Name(id='data', ctx=Load())]),
                                        slice=Constant(value=0),
                                        ctx=Load())),
                                Assign(
                                    targets=[
                                        Name(id='new_args', ctx=Store())],
                                    value=BinOp(
                                        left=Tuple(
                                            elts=[
                                                Name(id='transformed', ctx=Load())],
                                            ctx=Load()),
                                        op=Add(),
                                        right=Subscript(
                                            value=Name(id='args', ctx=Load()),
                                            slice=Slice(
                                                lower=Constant(value=1)),
                                            ctx=Load()))),
                                Return(
                                    value=Call(
                                        func=Name(id='func', ctx=Load()),
                                        args=[
                                            Starred(
                                                value=Name(id='new_args', ctx=Load()),
                                                ctx=Load())],
                                        keywords=[
                                            keyword(
                                                value=Name(id='kwargs', ctx=Load()))]))])],
                    decorator_list=[
                        Call(
                            func=Name(id='wraps', ctx=Load()),
                            args=[
                                Name(id='func', ctx=Load())])]),
                Return(
                    value=Name(id='wrapper', ctx=Load()))]),
        FunctionDef(
            name='normalize_data',
            args=arguments(
                args=[
                    arg(arg='data'),
                    arg(arg='method')],
                defaults=[
                    Constant(value='yeo')]),
            body=[
                If(
                    test=Compare(
                        left=Name(id='method', ctx=Load()),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value='yeo')]),
                    body=[
                        Return(
                            value=Subscript(
                                value=Call(
                                    func=Attribute(
                                        value=Name(id='stats', ctx=Load()),
                                        attr='yeojohnson',
                                        ctx=Load()),
                                    args=[
                                        Name(id='data', ctx=Load())]),
                                slice=Constant(value=0),
                                ctx=Load()))]),
                Return(
                    value=Subscript(
                        value=Call(
                            func=Attribute(
                                value=Name(id='stats', ctx=Load()),
                                attr='boxcox',
                                ctx=Load()),
                            args=[
                                Name(id='data', ctx=Load())]),
                        slice=Constant(value=0),
                        ctx=Load()))]),
        Expr(
            value=Call(
                func=Attribute(
                    value=Attribute(
                        value=Name(id='np', ctx=Load()),
                        attr='random',
                        ctx=Load()),
                    attr='seed',
                    ctx=Load()),
                args=[
                    Constant(value=53)])),
        Assign(
            targets=[
                Name(id='size', ctx=Store())],
            value=Call(
                func=Name(id='int', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='input', ctx=Load()),
                        args=[
                            Constant(value='Enter dataset size: ')])])),
        Assign(
            targets=[
                Name(id='n_tests', ctx=Store())],
            value=Call(
                func=Name(id='int', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='input', ctx=Load()),
                        args=[
                            Constant(value='Enter number of tests: ')])])),
        Assign(
            targets=[
                Name(id='data1', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Attribute(
                        value=Name(id='np', ctx=Load()),
                        attr='random',
                        ctx=Load()),
                    attr='normal',
                    ctx=Load()),
                args=[
                    Constant(value=0),
                    Constant(value=1),
                    Name(id='size', ctx=Load())])),
        Assign(
            targets=[
                Name(id='data2', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Attribute(
                        value=Name(id='np', ctx=Load()),
                        attr='random',
                        ctx=Load()),
                    attr='gamma',
                    ctx=Load()),
                args=[
                    Constant(value=2),
                    Constant(value=2),
                    Name(id='size', ctx=Load())])),
        Assign(
            targets=[
                Name(id='data3', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Attribute(
                        value=Name(id='np', ctx=Load()),
                        attr='random',
                        ctx=Load()),
                    attr='exponential',
                    ctx=Load()),
                args=[
                    Constant(value=2),
                    Name(id='size', ctx=Load())])),
        FunctionDef(
            name='run_ttest',
            args=arguments(
                args=[
                    arg(arg='x'),
                    arg(arg='y')]),
            body=[
                Return(
                    value=Call(
                        func=Attribute(
                            value=Name(id='stats', ctx=Load()),
                            attr='ttest_ind',
                            ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load()),
                            Name(id='y', ctx=Load())]))],
            decorator_list=[
                Name(id='check_normality', ctx=Load())]),
        FunctionDef(
            name='run_correlation',
            args=arguments(
                args=[
                    arg(arg='x'),
                    arg(arg='y')]),
            body=[
                Return(
                    value=Call(
                        func=Attribute(
                            value=Name(id='stats', ctx=Load()),
                            attr='pearsonr',
                            ctx=Load()),
                        args=[
                            Name(id='x', ctx=Load()),
                            Name(id='y', ctx=Load())]))],
            decorator_list=[
                Name(id='check_normality', ctx=Load())]),
        Assign(
            targets=[
                Name(id='results', ctx=Store())],
            value=List(ctx=Load())),
        For(
            target=Name(id='i', ctx=Store()),
            iter=Call(
                func=Name(id='range', ctx=Load()),
                args=[
                    Name(id='n_tests', ctx=Load())]),
            body=[
                If(
                    test=Compare(
                        left=BinOp(
                            left=Name(id='i', ctx=Load()),
                            op=Mod(),
                            right=Constant(value=3)),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=0)]),
                    body=[
                        Assign(
                            targets=[
                                Name(id='result', ctx=Store())],
                            value=Call(
                                func=Name(id='run_ttest', ctx=Load()),
                                args=[
                                    Name(id='data1', ctx=Load()),
                                    Name(id='data2', ctx=Load())]))],
                    orelse=[
                        If(
                            test=Compare(
                                left=BinOp(
                                    left=Name(id='i', ctx=Load()),
                                    op=Mod(),
                                    right=Constant(value=3)),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value=1)]),
                            body=[
                                Assign(
                                    targets=[
                                        Name(id='norm_data', ctx=Store())],
                                    value=Call(
                                        func=Name(id='normalize_data', ctx=Load()),
                                        args=[
                                            Name(id='data2', ctx=Load())])),
                                Assign(
                                    targets=[
                                        Name(id='result', ctx=Store())],
                                    value=Call(
                                        func=Name(id='run_correlation', ctx=Load()),
                                        args=[
                                            Name(id='norm_data', ctx=Load()),
                                            Name(id='data3', ctx=Load())]))],
                            orelse=[
                                Assign(
                                    targets=[
                                        Name(id='result', ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='stats', ctx=Load()),
                                            attr='f_oneway',
                                            ctx=Load()),
                                        args=[
                                            Name(id='data1', ctx=Load()),
                                            Name(id='data2', ctx=Load()),
                                            Name(id='data3', ctx=Load())]))])]),
                Expr(
                    value=Call(
                        func=Attribute(
                            value=Name(id='results', ctx=Load()),
                            attr='append',
                            ctx=Load()),
                        args=[
                            Name(id='result', ctx=Load())]))])])