Module(
    body=[
        Import(
            names=[
                alias(name='scipy.stats', asname='stats')]),
        Import(
            names=[
                alias(name='numpy', asname='np')]),
        Import(
            names=[
                alias(name='pandas', asname='pd')]),
        FunctionDef(
            name='generate_datasets',
            args=arguments(
                args=[
                    arg(arg='n_sets'),
                    arg(arg='size')]),
            body=[
                Expr(
                    value=Call(
                        func=Attribute(
                            value=Attribute(
                                value=Name(id='np', ctx=Load()),
                                attr='random',
                                ctx=Load()),
                            attr='seed',
                            ctx=Load()),
                        args=[
                            Constant(value=52)])),
                For(
                    target=Name(id='i', ctx=Store()),
                    iter=Call(
                        func=Name(id='range', ctx=Load()),
                        args=[
                            Name(id='n_sets', ctx=Load())]),
                    body=[
                        If(
                            test=Compare(
                                left=BinOp(
                                    left=Name(id='i', ctx=Load()),
                                    op=Mod(),
                                    right=Constant(value=3)),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value=0)]),
                            body=[
                                Expr(
                                    value=Yield(
                                        value=Call(
                                            func=Attribute(
                                                value=Attribute(
                                                    value=Name(id='np', ctx=Load()),
                                                    attr='random',
                                                    ctx=Load()),
                                                attr='normal',
                                                ctx=Load()),
                                            args=[
                                                Name(id='i', ctx=Load()),
                                                Constant(value=1),
                                                Name(id='size', ctx=Load())])))],
                            orelse=[
                                If(
                                    test=Compare(
                                        left=BinOp(
                                            left=Name(id='i', ctx=Load()),
                                            op=Mod(),
                                            right=Constant(value=3)),
                                        ops=[
                                            Eq()],
                                        comparators=[
                                            Constant(value=1)]),
                                    body=[
                                        Expr(
                                            value=Yield(
                                                value=Call(
                                                    func=Attribute(
                                                        value=Attribute(
                                                            value=Name(id='np', ctx=Load()),
                                                            attr='random',
                                                            ctx=Load()),
                                                        attr='pareto',
                                                        ctx=Load()),
                                                    args=[
                                                        Constant(value=3),
                                                        Name(id='size', ctx=Load())])))],
                                    orelse=[
                                        Expr(
                                            value=Yield(
                                                value=Call(
                                                    func=Attribute(
                                                        value=Attribute(
                                                            value=Name(id='np', ctx=Load()),
                                                            attr='random',
                                                            ctx=Load()),
                                                        attr='weibull',
                                                        ctx=Load()),
                                                    args=[
                                                        Constant(value=2),
                                                        Name(id='size', ctx=Load())])))])])])]),
        FunctionDef(
            name='transform_if_needed',
            args=arguments(
                args=[
                    arg(arg='data'),
                    arg(arg='method')],
                defaults=[
                    Constant(value='auto')]),
            body=[
                If(
                    test=Compare(
                        left=Name(id='method', ctx=Load()),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value='auto')]),
                    body=[
                        Assign(
                            targets=[
                                Tuple(
                                    elts=[
                                        Name(id='_', ctx=Store()),
                                        Name(id='p', ctx=Store())],
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='stats', ctx=Load()),
                                    attr='normaltest',
                                    ctx=Load()),
                                args=[
                                    Name(id='data', ctx=Load())])),
                        If(
                            test=Compare(
                                left=Name(id='p', ctx=Load()),
                                ops=[
                                    Lt()],
                                comparators=[
                                    Constant(value=0.05)]),
                            body=[
                                Return(
                                    value=Subscript(
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='stats', ctx=Load()),
                                                attr='yeojohnson',
                                                ctx=Load()),
                                            args=[
                                                Name(id='data', ctx=Load())]),
                                        slice=Constant(value=0),
                                        ctx=Load()))])],
                    orelse=[
                        If(
                            test=Compare(
                                left=Name(id='method', ctx=Load()),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value='box')]),
                            body=[
                                Return(
                                    value=Subscript(
                                        value=Call(
                                            func=Attribute(
                                                value=Name(id='stats', ctx=Load()),
                                                attr='boxcox',
                                                ctx=Load()),
                                            args=[
                                                Name(id='data', ctx=Load())]),
                                        slice=Constant(value=0),
                                        ctx=Load()))])]),
                Return(
                    value=Name(id='data', ctx=Load()))]),
        Assign(
            targets=[
                Name(id='n_sets', ctx=Store())],
            value=Call(
                func=Name(id='int', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='input', ctx=Load()),
                        args=[
                            Constant(value='Enter number of datasets: ')])])),
        Assign(
            targets=[
                Name(id='size', ctx=Store())],
            value=Call(
                func=Name(id='int', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='input', ctx=Load()),
                        args=[
                            Constant(value='Enter size of each dataset: ')])])),
        Assign(
            targets=[
                Name(id='datasets', ctx=Store())],
            value=Call(
                func=Name(id='list', ctx=Load()),
                args=[
                    Call(
                        func=Name(id='generate_datasets', ctx=Load()),
                        args=[
                            Name(id='n_sets', ctx=Load()),
                            Name(id='size', ctx=Load())])])),
        Assign(
            targets=[
                Name(id='results', ctx=Store())],
            value=List(ctx=Load())),
        For(
            target=Name(id='i', ctx=Store()),
            iter=Call(
                func=Name(id='range', ctx=Load()),
                args=[
                    BinOp(
                        left=Call(
                            func=Name(id='len', ctx=Load()),
                            args=[
                                Name(id='datasets', ctx=Load())]),
                        op=Sub(),
                        right=Constant(value=1))]),
            body=[
                Assign(
                    targets=[
                        Name(id='current', ctx=Store())],
                    value=Subscript(
                        value=Name(id='datasets', ctx=Load()),
                        slice=Name(id='i', ctx=Load()),
                        ctx=Load())),
                Assign(
                    targets=[
                        Name(id='next_data', ctx=Store())],
                    value=Subscript(
                        value=Name(id='datasets', ctx=Load()),
                        slice=BinOp(
                            left=Name(id='i', ctx=Load()),
                            op=Add(),
                            right=Constant(value=1)),
                        ctx=Load())),
                If(
                    test=Compare(
                        left=BinOp(
                            left=Name(id='i', ctx=Load()),
                            op=Mod(),
                            right=Constant(value=2)),
                        ops=[
                            Eq()],
                        comparators=[
                            Constant(value=0)]),
                    body=[
                        Assign(
                            targets=[
                                Tuple(
                                    elts=[
                                        Name(id='stat', ctx=Store()),
                                        Name(id='_', ctx=Store())],
                                    ctx=Store())],
                            value=Call(
                                func=Attribute(
                                    value=Name(id='stats', ctx=Load()),
                                    attr='ttest_rel',
                                    ctx=Load()),
                                args=[
                                    Name(id='current', ctx=Load()),
                                    Name(id='next_data', ctx=Load())])),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='results', ctx=Load()),
                                    attr='append',
                                    ctx=Load()),
                                args=[
                                    Name(id='stat', ctx=Load())]))],
                    orelse=[
                        Assign(
                            targets=[
                                Name(id='transformed', ctx=Store())],
                            value=Call(
                                func=Name(id='transform_if_needed', ctx=Load()),
                                args=[
                                    Name(id='current', ctx=Load())])),
                        If(
                            test=Compare(
                                left=BinOp(
                                    left=Name(id='i', ctx=Load()),
                                    op=Mod(),
                                    right=Constant(value=3)),
                                ops=[
                                    Eq()],
                                comparators=[
                                    Constant(value=0)]),
                            body=[
                                Assign(
                                    targets=[
                                        Tuple(
                                            elts=[
                                                Name(id='stat', ctx=Store()),
                                                Name(id='_', ctx=Store())],
                                            ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='stats', ctx=Load()),
                                            attr='pearsonr',
                                            ctx=Load()),
                                        args=[
                                            Name(id='transformed', ctx=Load()),
                                            Name(id='next_data', ctx=Load())]))],
                            orelse=[
                                Assign(
                                    targets=[
                                        Tuple(
                                            elts=[
                                                Name(id='stat', ctx=Store()),
                                                Name(id='_', ctx=Store())],
                                            ctx=Store())],
                                    value=Call(
                                        func=Attribute(
                                            value=Name(id='stats', ctx=Load()),
                                            attr='f_oneway',
                                            ctx=Load()),
                                        args=[
                                            Name(id='transformed', ctx=Load()),
                                            Name(id='next_data', ctx=Load())]))]),
                        Expr(
                            value=Call(
                                func=Attribute(
                                    value=Name(id='results', ctx=Load()),
                                    attr='append',
                                    ctx=Load()),
                                args=[
                                    Name(id='stat', ctx=Load())]))])]),
        Assign(
            targets=[
                Name(id='final_result', ctx=Store())],
            value=Call(
                func=Attribute(
                    value=Name(id='stats', ctx=Load()),
                    attr='ttest_ind',
                    ctx=Load()),
                args=[
                    Subscript(
                        value=Name(id='datasets', ctx=Load()),
                        slice=Constant(value=0),
                        ctx=Load()),
                    Subscript(
                        value=Name(id='datasets', ctx=Load()),
                        slice=UnaryOp(
                            op=USub(),
                            operand=Constant(value=1)),
                        ctx=Load())]))])